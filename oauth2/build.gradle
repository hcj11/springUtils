buildscript {
	ext {
		springBootVersion = '2.0.3.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "http://maven.aliyun.com/nexus/content/repositories/central/" }
    maven { url "http://repo2.maven.org/maven2/" }
    maven { url "https://repository.cloudera.com/content/repositories/releases/" }
    maven { url "http://repo.hortonworks.com/content/repositories/releases/" }
    maven { url "http://repo.spring.io/plugins-release/"}
    maven { url "http://repo.spring.io/libs-milestone/"}
    mavenLocal()
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-aop')
	compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-cache')
    compile 'net.sf.ehcache:ehcache-core:2.6.6'

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-data-redis')
    compile('redis.clients:jedis:2.9.0')
    /*添加redis时,*/
    compile 'org.apache.commons:commons-pool2:2.0'
    compile('org.springframework.cloud:spring-cloud-security:2.0.0.RELEASE')
    compile('org.springframework.security.oauth:spring-security-oauth2:2.3.3.RELEASE')
	compile('org.springframework.boot:spring-boot-starter-web'){
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile 'org.apache.httpcomponents:httpclient:4.5.6'
    compile "org.apache.commons:commons-lang3"
    compile "org.springframework.boot:spring-boot-starter-undertow"
	runtime('org.springframework.boot:spring-boot-devtools')
    runtime('mysql:mysql-connector-java')
	compileOnly('org.springframework.boot:spring-boot-configuration-processor')
	compileOnly('org.projectlombok:lombok')
	testCompile('org.springframework.boot:spring-boot-starter-test')
	testCompile('org.springframework.security:spring-security-test')
}
